syntax = "proto2";
package Devialet.SpotifyConnect;
import "CallMeMaybe/CommonMessages.proto";
import "CallMeMaybe/CallMeMaybe.proto";
option py_generic_services = true;

message ZeroConfApiRequest {
	required uint32 method = 1 ;
	required string url = 2 ;
	required bytes body = 3 ;
	
	enum Method {
		Invalid = 0;
		Get = 1;
		Post = 2;
	}
}

message ZeroConfApiReply {
	required uint32 statusCode = 1 ;
	required uint32 lastError = 2 ;
	required bytes body = 3 ;
	
	enum StatusCode {
		Ok = 0;
		Bad = 1;
		Unknown = 2;
		NotImplemented = 3;
		LoginFailed = 4;
		MissingAction = 5;
		InvalidAction = 6;
		InvalidArguments = 7;
		NoSpotifySession = 8;
		SpotifyError = 9;
	}
}

service Agent {
	rpc handleZeroConfApiRequest(.Devialet.SpotifyConnect.ZeroConfApiRequest) returns (.Devialet.SpotifyConnect.ZeroConfApiReply) {
	}
	rpc setBouquetId(.Devialet.CallMeMaybe.BytesProperty) returns (.Devialet.CallMeMaybe.Empty) {
	}
	rpc play(.Devialet.CallMeMaybe.Empty) returns (.Devialet.CallMeMaybe.Empty) {
	}
	rpc pause(.Devialet.CallMeMaybe.Empty) returns (.Devialet.CallMeMaybe.Empty) {
	}
	rpc next(.Devialet.CallMeMaybe.Empty) returns (.Devialet.CallMeMaybe.Empty) {
	}
	rpc previous(.Devialet.CallMeMaybe.Empty) returns (.Devialet.CallMeMaybe.Empty) {
	}
	rpc repeat(.Devialet.CallMeMaybe.BoolProperty) returns (.Devialet.CallMeMaybe.Empty) {
	}
	rpc shuffle(.Devialet.CallMeMaybe.BoolProperty) returns (.Devialet.CallMeMaybe.Empty) {
	}
	rpc seek(.Devialet.CallMeMaybe.UInt32Property) returns (.Devialet.CallMeMaybe.Empty) {
	}
	option (Devialet.CallMeMaybe.dvltServiceOptions) = {
		serviceName: "com.devialet.spotifyconnect.agent-0"
		baseService: "Devialet.AudioSource.LiveSourceSession"
		properties {
		  property {
		    type: "Devialet.CallMeMaybe.BytesProperty"
		    name: "playerId"
		    readOnly: true
		  }
		  property {
		    type: "Devialet.CallMeMaybe.BoolProperty"
		    name: "isActive"
		    readOnly: true
		  }
		  property {
		    type: "Devialet.CallMeMaybe.BoolProperty"
		    name: "isStandalone"
		  }
		  property {
		    type: "Devialet.CallMeMaybe.BoolProperty"
		    name: "isPlaying"
		    readOnly: true
		  }
		  property {
		    type: "Devialet.CallMeMaybe.BoolProperty"
		    name: "isRepeated"
		    readOnly: true
		  }
		  property {
		    type: "Devialet.CallMeMaybe.BoolProperty"
		    name: "isShuffled"
		    readOnly: true
		  }
		  property {
		    type: "Devialet.CallMeMaybe.UInt32Property"
		    name: "duration"
		    readOnly: true
		  }
		  property {
		    type: "Devialet.CallMeMaybe.UInt32Property"
		    name: "position"
		    readOnly: true
		  }
		}
		
	};
}